name: CI Pipeline

on:
  push:
    branches:
      - terraform-aws
      - dev
      - main
  pull_request:
    branches:
      - terraform-aws
      - dev

jobs:
  test-backend:
    runs-on: ubuntu-22.04
    services:
      db:
        image: mongo:6.0
        ports: ["27017:27017"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install & test backend
        run: |
          npm ci
          npm run lint
          npm test
        working-directory: backend

  test-frontend:
    runs-on: ubuntu-22.04
    needs: test-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install & test frontend
        run: |
          npm ci
          npm run lint
          npm test
        working-directory: frontend-v2

  release:
    name: Release Docker Images
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code with full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Make release.sh executable
        run: chmod +x ./release.sh

      - name: Create dummy backend/.env for build
        run: |
          mkdir -p backend
          touch backend/.env

      - name: Run release script
        run: ./release.sh
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
